# coding: utf-8

"""
    HashiCorp Vault API

    HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.  # noqa: E501

    OpenAPI spec version: 1.2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class Body112(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'algorithm': 'str',
        'format': 'str',
        'input': 'str',
        'urlalgorithm': 'str'
    }

    attribute_map = {
        'algorithm': 'algorithm',
        'format': 'format',
        'input': 'input',
        'urlalgorithm': 'urlalgorithm'
    }

    def __init__(self, algorithm='sha2-256', format='hex', input=None, urlalgorithm=None):  # noqa: E501
        """Body112 - a model defined in Swagger"""  # noqa: E501
        self._algorithm = None
        self._format = None
        self._input = None
        self._urlalgorithm = None
        self.discriminator = None
        if algorithm is not None:
            self.algorithm = algorithm
        if format is not None:
            self.format = format
        if input is not None:
            self.input = input
        if urlalgorithm is not None:
            self.urlalgorithm = urlalgorithm

    @property
    def algorithm(self):
        """Gets the algorithm of this Body112.  # noqa: E501

        Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\".  # noqa: E501

        :return: The algorithm of this Body112.  # noqa: E501
        :rtype: str
        """
        return self._algorithm

    @algorithm.setter
    def algorithm(self, algorithm):
        """Sets the algorithm of this Body112.

        Algorithm to use (POST body parameter). Valid values are: * sha2-224 * sha2-256 * sha2-384 * sha2-512 Defaults to \"sha2-256\".  # noqa: E501

        :param algorithm: The algorithm of this Body112.  # noqa: E501
        :type: str
        """

        self._algorithm = algorithm

    @property
    def format(self):
        """Gets the format of this Body112.  # noqa: E501

        Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\".  # noqa: E501

        :return: The format of this Body112.  # noqa: E501
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this Body112.

        Encoding format to use. Can be \"hex\" or \"base64\". Defaults to \"hex\".  # noqa: E501

        :param format: The format of this Body112.  # noqa: E501
        :type: str
        """

        self._format = format

    @property
    def input(self):
        """Gets the input of this Body112.  # noqa: E501

        The base64-encoded input data  # noqa: E501

        :return: The input of this Body112.  # noqa: E501
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this Body112.

        The base64-encoded input data  # noqa: E501

        :param input: The input of this Body112.  # noqa: E501
        :type: str
        """

        self._input = input

    @property
    def urlalgorithm(self):
        """Gets the urlalgorithm of this Body112.  # noqa: E501

        Algorithm to use (POST URL parameter)  # noqa: E501

        :return: The urlalgorithm of this Body112.  # noqa: E501
        :rtype: str
        """
        return self._urlalgorithm

    @urlalgorithm.setter
    def urlalgorithm(self, urlalgorithm):
        """Sets the urlalgorithm of this Body112.

        Algorithm to use (POST URL parameter)  # noqa: E501

        :param urlalgorithm: The urlalgorithm of this Body112.  # noqa: E501
        :type: str
        """

        self._urlalgorithm = urlalgorithm

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Body112, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Body112):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
